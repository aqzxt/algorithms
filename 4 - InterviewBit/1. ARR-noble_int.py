"""
Created on Wed Feb 28 03:58:48 2018 ----------- @author: mxhfield
"""

def noble_integer(A):
    A.sort()
    for k in range(len(A)-1):
        
        print(A, A[k], A[k+1], len(A)-k-1)
        
        if A[k] == A[k+1]:
            continue
        
        if A[k] == len(A)-k-1:
            return 1
        
    if A[len(A)-1] == 0:
        return 1

    return -1

a1 = [7, 3, 5]
a2 = [4, -9, 8, 5, -1, 7, 5, 3]
a3 = [-8, 7, 8, -7, 9, 6, 2]
a4 = [5, 6, 2]
a5 = [-4, -2, 0, -1, -6]
a6 = [-4, 7, 5, 3, 5, -4, 2, -1, -9, -8, -3, 0, 9, -7, -4, -10, -4, 2, 6, 1, -2, -3, -1, -8, 0, -8, -7, -3, 5, -1, -8, -8, 8, -1, -3, 3, 6, 1, -8, -1, 3, -9, 9, -6, 7, 8, -6, 5, 0, 3, -4, 1, -10, 6, 3, -8, 0, 6, -9, -5, -5, -6, -3, 6, -5, -4, -1, 3, 7, -6, 5, -8, -5, 4, -3, 4, -6, -7, 0, -3, -2, 6, 8, -2, -6, -7, 1, 4, 9, 2, -10, 6, -2, 9, 2, -4, -4, 4, 9, 5, 0, 4, 8, -3, -9, 7, -8, 7, 2, 2, 6, -9, -10, -4, -9, -5, -1, -6, 9, -10, -1, 1, 7, 7, 1, -9, 5, -1, -3, -3, 6, 7, 3, -4, -5, -4, -7, 9, -6, -2, 1, 2, -1, -7, 9, 0, -2, -2, 5, -10, -1, 6, -7, 8, -5, -4, 1, -9, 5, 9, -2, -6, -2, -9, 0, 3, -10, 4, -6, -6, 4, -3, 6, -7, 1, -3, -5, 9, 6, 2, 1, 7, -2, 5]
a7 = [-10, 1, -6, -2]
a8 = [ -4, -2, 0, -1, -6 ]

print(noble_integer(a2))

def noble_integer2(xs):
    if not xs:
        return -1

    xs = sorted(xs, reverse=True)

    if xs[0] == 0:
        return 1

    for i in range(1, len(xs)):
        print(xs, xs[i-1], xs[i], i)
        if xs[i] != xs[i - 1] and xs[i] == i:
            return 1
    return -1
    
print(noble_integer2(a2))